name: veridex_check

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  # schedule:
  #   - cron: '0 */3 * * *'  #   分 时 日 月 周

jobs:
  build:
    runs-on: ubuntu-latest
    if: "!startsWith(github.event.head_commit.message, 'GitHubAction:')"

    steps:
      - uses: actions/checkout@v2
      - name: set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
          #cache: gradle
      
      - name: Gradle cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*') }}-${{ hashFiles('**/gradle/wrapper/gradle-wrapper.properties') }}-${{ hashFiles('**/buildSrc/**/*.kt') }}

      - name: AVD cache
        uses: actions/cache@v2
        id: avd-cache
        with:
          path: |
            ~/.android/avd/*
            ~/.android/adb*
          key: avd-cache

      - name: checkout analysys-dev-sdk and sync
        shell: bash
        continue-on-error: true
        run: |
          git clone https://oauth2:${{ secrets.GTOKEN }}@github.com/hhhaiai/analysys-dev-sdk.git
          echo "===========clone over===================="
          ls
          cd analysys-dev-sdk
          echo "===========into analysys-dev-sdk===================="
          ls
          git checkout dev
          bash syncSubmodule.sh
          chmod -R 777 *
          git config core.filemode false
          sudo apt-get -y install unzip

      - name: veridex_check
        shell: bash
        continue-on-error: true
        run: |
          cd analysys-dev-sdk
          source replace_line.sh
          comment
          ./gradlew build
          ### export PATH
          export PATH=$PATH:${ANDROID_HOME}/emulator:${ANDROID_HOME}/platform-tools:${ANDROID_HOME}/tools:${ANDROID_HOME}/tools/bin:${ANDROID_HOME}/build-tools/30.0.3:${ANDROID_HOME}/build-tools/30.0.3/lld-bin:${ANDROID_HOME}/ndk/23.0.7599858
          echo "veridex_check 测试结果 ">./veridex_check.txt
          # delete appcompat
          rm -rf ./appcompat.tar.gz
          branch="android12-release"
          wget https://android.googlesource.com/platform/prebuilts/runtime/+archive/refs/heads/${branch}/appcompat.tar.gz
          # wget https://github.com/hhhaiai/tools/releases/download/v1.0/appcompat.tar.gz
          if [ $# == 0 ]; then
            chmod -R 777 *
            #echo "===================Download over===================">>./veridex_check.txt
            #ls>>./veridex_check.txt
            # tree>>./veridex_check.txt
            # 官方包解压到本地，即 MODULE_LICENSE_APACHE hiddenapi-flags.csv veridex-mac.zip NOTICE update.py README.txt veridex-linux.zip
            tar zxvf ./appcompat.tar.gz
            chmod -R 777 *
            #echo "===================tar zxvf appcompat.tar.gz结果===================">>./veridex_check.txt
            #ls>>./veridex_check.txt
            #tree>>./veridex_check.txt
            if [ $# == 0 ]; then
              # use native file,need copy
              # cp appcompat/veridex-linux.zip ./veridex-linux.zip
              # delete package from network
              rm -rf MODULE_LICENSE_APACHE hiddenapi-flags.csv  veridex-mac.zip NOTICE update.py README.txt
              # use wget package has
              unzip ./veridex-linux.zip
              #echo "=======unzip veridex-linux.zip===================">>./veridex_check.txt
              #ls>>./veridex_check.txt
              # tree>>./veridex_check.txt
              cp ./dev-sdk/build/outputs/aar/dev-sdk-debug.aar ./dev-sdk-debug.aar
              unzip ./dev-sdk-debug.aar
              #echo "========unzip dev-sdk-debug.aar===================" >>./veridex_check.txt
              #ls>>./veridex_check.txt
              chmod -R 777 *
              ${ANDROID_HOME}/build-tools/30.0.3/dx --dex --output=target.dex classes.jar
              #echo "========convery jar 2 dex===================" >>./veridex_check.txt
              #ls>>./veridex_check.txt
              # tree>>./veridex_check.txt
              chmod -R 777 *
              echo "=============veridex[${branch}] 检测结果==============" >>./veridex_check.txt
              bash ./appcompat.sh --dex-file=target.dex>>./veridex_check.txt

              echo "${{github.repository_owner}} will upload files"
              #######################################################################################################
              ######################################## upload files #################################################
              #######################################################################################################
              file_name=veridex_check.txt
              wget  https://github.com/hhhaiai/uploadGithub/releases/download/v1.1/uploadGithubService-1.1-jar-with-dependencies.jar
              dat=$(date "+%H%M%S")
              tpn=${{ github.repository }}
              pn=`echo $tpn | cut -d \/ -f 2`
              us=${{github.repository_owner}}
              echo "project name: $pn"
              today=$(date "+%Y%m%d")
              upload_file_name="ci/$today/${dat}-$pn-${file_name}"
              #upload_file_name="ci/${dat}-$pn-${file_name}"
              chmod -R 777 *
              echo "=================文件查看===================="
              ls
              echo "==dat== $dat"
              echo "==dat== $upload_file_name"
              # https://docs.github.com/cn/actions/learn-github-actions/contexts#github-context
              echo "===========================">>${file_name}
              echo "Project: ${{ github.repository }}">>${file_name}
              echo "Job: ${{ github.job }}">>${file_name}
              echo "Build commit sha: ${{ github.sha }}">>${file_name}
              echo "job.container.id: ${{ job.container.id }}">>${file_name}
              echo "job.container.network: ${{ job.container.network }}">>${file_name}
              java -jar uploadGithubService-1.1-jar-with-dependencies.jar  -owner hhhaiai -repo Git_result -target-dir-full-name  $upload_file_name -native-file ${file_name}  -token ${{ secrets.GTOKEN }} -commit-messge  "GitHubAction: veridex_check ${{ github.repository }} Job ${{ github.job }}, created by ${{ github.workflow }} " -commit-auther "UploadGithubService" -commit-email "sanbo.xyz@gmail.com"

            fi # end with ./appcompat.tar.gz

          fi # end with wget
          uncomment

      - name: Send mail
        uses: dawidd6/action-send-mail@v3
        with:
          #server_address: smtp.gmail.com
          #server_port: 465
          server_address: smtp.163.com
          server_port: 465
          username: ${{ secrets.MAILUSERNAME }}
          password: ${{ secrets.MAILPASSWORD }}
          subject: GithubActions( ${{ github.job }} ) - ${{ github.sha }}
          to: ${{ secrets.MAIL_LIST }}
          from: github.com/hhhaiai
          body: Build job ( ${{ github.job }} ) of ${{ github.repository }} completed successfully!
          ignore_cert: true
          priority: low
          secure: true
          attachments: ./analysys-dev-sdk/veridex_check.txt
          #html_body: file://dev-sdk/build/reports/lint-results.html
          #convert_markdown: true
